// Variables

// Colors
$primaryColor: rgb(69, 168, 95);
$secondaryColor: rgb(51, 51, 51);
$whiteColor: rgb(255, 255, 255);
$fontColor: rgb(255, 255, 255);
$fontColor2: rgb(0, 0, 0);

// Fonts
$logoFont: 'Teko',
sans-serif;
$primaryFont: 'Roboto',
sans-serif;

// reset css

*,
*::before,
*::after {
    box-sizing: border-box;
    outline: none;
}


body {
    margin: 0;
    font-family: $primaryFont;
    background-color: $whiteColor;
    color: $fontColor2;
}

// hide arrows in number input field
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}


input[type=number] {
    -moz-appearance: textfield;
}

// HEADER //

// header mixins
@mixin toggleLabelBase {
    position: absolute;
    top: 2em;
    left: -5px;
    margin-left: 1em;
    height: 3%;
}

@mixin toggleSpanBase {
    display: block;
    height: 4px;
    width: 2em;
    border-radius: 4px;
    position: relative;
    background-color: $fontColor;
}

@mixin toggleSpanCloseBase {
    transform: rotate(0deg);
    transition: transform 250ms ease-in-out;
}

@mixin toggleSpanPseudo($translateVal) {
    content: '';
    position: absolute;
    transform: translateY($translateVal);
    transition: transform 250ms ease-in-out 250ms;
}

@mixin checkedCloseSpan($rotateVal) {
    transform: rotate($rotateVal);
    transition: transform 250ms ease-in-out 280ms;
}

// head
header {
    background: $primaryColor;
    text-align: center;
    width: 100%;
    height: 80px;
    z-index: 10;
    top: 0;

    .logo {
        font-family: $logoFont;
        color: #fff;
        margin: 0;
        padding-top: 16px;
    }

    nav {
        text-align: left;
        top: 0;
        left: 0;
        padding-bottom: 5px;
        background: $primaryColor;
        width: 100%;
        transform: scale(1, 0);
        transform-origin: top;
        transition: transform 400ms ease-in-out;

        ul {
            margin: 0;
            padding: 0;
            list-style: none;

            li {
                margin-bottom: 1em;
                margin-left: 1em;
            }
        }

        a {
            color: $fontColor;
            text-decoration: none;
            font-size: 1.2rem;
            text-transform: uppercase;
            opacity: 0;
            transition: opacity 150ms ease-in-out;
        }
    }

    // nav-menu hamburger icon
    .nav-toggle {
        display: none;

        &:checked {
            &~nav {
                transform: scale(1, 1);

                a {
                    opacity: 1;
                    transition: opacity 250ms ease-in-out 250ms;
                }
            }

            &~.nav-toggle-label {
                span {
                    opacity: 0;
                    transition: opacity 250ms ease-in-out 270ms;

                    &::before, &::after {
                        transform: translateY(0px);
                        transition: transform 250ms ease-in-out;
                    }
                }

                &-close-45 {
                    span {
                        @include checkedCloseSpan(45deg);
                    }
                }
                
                &-close-neg45 {
                    span {
                        @include checkedCloseSpan(-45deg);
                    }
                }
            }
        }
    }

    .nav-toggle-label {
        @include toggleLabelBase();

        span {
            @include toggleSpanBase();
            opacity: 1;
            transition: opacity 350ms ease-in-out;

            &::before {
                @include toggleSpanBase();
                @include toggleSpanPseudo(-9px);
            }

            &::after {
                @include toggleSpanBase();
                @include toggleSpanPseudo(9px);
            }
        }
    }

    .nav-toggle-label-close-45 {
        @include toggleLabelBase();

        span {
            @include toggleSpanBase();
            @include toggleSpanCloseBase();
        }
    }

    .nav-toggle-label-close-neg45 {
        @include toggleLabelBase();

        span {
            @include toggleSpanBase();
            @include toggleSpanCloseBase();
        }
    }
}